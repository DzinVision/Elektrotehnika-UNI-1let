JavaScript

integriran v nek okolje --> html
 <script>
	

 <\script>

obmocje delovanja

<script src = "imedatoteke.js"><\script>
	^^
	vir datoteke z javascript kodo

Spremenljivke

var = a;
definiranje spremenjlivke a
koncanje stavka s podpicjem
= je operator ki definira in priredi vrednost spremenljivki
a = 31 = priredi spremenljivki a število 31

pravila:
angleške crke
desetiške cifre
podcrtaj (_) (underscore)
zacetek stavka ne sme biti število
loci velike in male crtke (case-sensitive)
nedovoljena uporaba rezerviranih besed (funkcije ...)

"navednice" ali Konstanta je dobesedni znak, ne spremenljivka ali funkcija
primer: console.log(a); izpiše vrednost spremeljivke a v konzolo
	console.log("a"); izpiše crko a -> dobesedno

spremeljivka lahko vsebuje konstanto 
primer: a = "a";
console.log(a); --> izhod = a

TIP					VREDNOST

številski(number)			41 3.14 NaN Infinity
typeof je operator za zaznavanje tipa vrednosti
primer: console.log(typeof (13)) --> number
ce ni število, izpiše NaN oziroma Not A Number

Boolov (boolean)			true false
operator ja ali ne
primer: console.loh(typeof true); --> boolean

znakovni niz (string) 			"dbasdjfmsdn" "123"
vse v navednicah - text
primer: console.log(typeof ("hrenovke")) --> string

nedolocen tip (undefined)		undefined

IZRAZI
ima ali vrne neko vrednost
PREDNOST ali (precedence) operatorjev med seboj
primer: a+b*c --> * ima prednost pred +. (a+b)*c --> + ima prednost pred *
Operatorji, ki imajo isto prednost, se izvajajo v VRSTNEM REDU(associativity) iz leve proti desni

OPERATORJI
Aritmeticni operatorji:
+, - (unarni / binarni)
*, /
% ostanek pri celošteviljskem deljenju

Primerjalni operatorji
vracajo samo TRUE ali FALSE < > >= <= = !=

velja tudi "5" == 5 --> TRUE

naloga: 5 < x <  6
x = 10

Logicni operatorji:

vrnejo TRUE ali FALSE

&& ...... logicni IN(and)
|| ...... logicni ALI(or)
!  ...... negacija(NOT)
=  ...... priredilni operator (na levi je spremenljivka, desni pa vrednost, izraz ....

prednost in vrstni red izvajanja:
Aritmeticni->
Primerjalni ->
logicni ->
priredilni <-

Bljižnice(shorthands):
spremenljivka = spremenljivka + izraz
spremenljivka += izraz
spremenljivka++ --> doda 1
spremenljivka -+ izraz
spremenljivka --

vejicni operator:
ima še nižjo prioriteto kot priredilni operator

pogojni operator:
pogoj ? ce_je_true : ce_je_false

primerjalni operatorji:
---crke, velike so pred malimi, po abecedi je primerjanje, od prve do zadnje